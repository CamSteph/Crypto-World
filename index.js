const homeLink=document.querySelector("[data-home-link]"),homeLink2=document.querySelector("[data-home-link2]");homeLink.style.textDecoration="underline",homeLink.style.textDecorationColor="#3bcdf1",homeLink2.style.textDecoration="underline",homeLink2.style.textDecorationColor="#3bcdf1";const openMenuBtn=document.querySelector("[data-open-menu]"),menuLayer=document.querySelector("[data-menu-layer]"),closeMenuBtn=document.querySelector("[data-close-menu]");openMenuBtn.addEventListener("click",(()=>{menuLayer.style.transform="translateX(0)"})),closeMenuBtn.addEventListener("click",(()=>{menuLayer.style.transform="translateX(-100%)"}));class CryptoAPI{constructor(a,t){this.coinTickerWrapper=a,this.listWrapper=document.querySelector("[data-list-wrap]"),this.globalStatCard=t,this.coinTickerListArray,this.globalStatDetails,this.noDataMsg='\n <span class="no-data-msg">Uh-oh! <ion-icon name="sad"></ion-icon> There\'s currently no data available - Please check back later.</span>\n '}async requestListOfCoinTickers(){try{let a=await fetch("https://coinlore-cryptocurrency.p.rapidapi.com/api/tickers/?start=0&limit=50",{method:"GET",headers:{"x-rapidapi-host":"coinlore-cryptocurrency.p.rapidapi.com","x-rapidapi-key":"36d5de7f91mshb4b6b9128caad09p1587e6jsnb8616d16e50f"}}),t=await a.json();if(!t.data)return void(this.listWrapper.innerHTML=this.noDataMsg);this.coinTickerListArray=t.data,this.displayCoinTickerListArray(this.coinTickerListArray)}catch(a){this.listWrapper.innerHTML=this.noDataMsg,console.log(a)}}displayCoinTickerListArray(a,t=!1){if(t){this.coinTickerWrapper.innerHTML="";for(let t=0;t<a.length;t++)this.coinTickerWrapper.innerHTML+=`\n <tr class="coin-ticker-card" onclick="callAPI(this)" id="${a[t].id}">\n <td class="rank">${a[t].rank}</td>\n <td>${a[t].symbol}</td>\n <td>${a[t].name}</td>\n <td>$ ${this.applyCommas(parseFloat(a[t].price_usd).toFixed(2).toString())}</td>\n </tr>\n `}else for(let t=0;t<a.length;t++)this.coinTickerWrapper.innerHTML+=`\n <tr class="coin-ticker-card" onclick="callAPI(this)" id="${a[t].id}">\n <td class="rank">${a[t].rank}</td>\n <td>${a[t].symbol}</td>\n <td>${a[t].name}</td>\n <td>$ ${this.applyCommas(parseFloat(a[t].price_usd).toFixed(2).toString())}</td>\n </tr>\n `}async requestGlobalStatAPI(){try{let a=await fetch("https://coinlore-cryptocurrency.p.rapidapi.com/api/global/",{method:"GET",headers:{"x-rapidapi-host":"coinlore-cryptocurrency.p.rapidapi.com","x-rapidapi-key":"36d5de7f91mshb4b6b9128caad09p1587e6jsnb8616d16e50f"}}),t=await a.json();if(!t)return void(this.globalStatCard.innerHTML=this.noDataMsg);this.globalStatDetails=JSON.stringify(t[0]),this.displayGlobalStatDetails(this.globalStatDetails)}catch(a){this.globalStatCard.innerHTML=this.noDataMsg,console.log(a)}}displayGlobalStatDetails(a){let t=(a=JSON.parse(a)).coins_count.toString(),e=a.active_markets.toString(),s=parseFloat(a.total_mcap).toFixed(2),r=parseFloat(a.mcap_change).toFixed(2),n=parseFloat(a.total_volume).toFixed(2),i=parseFloat(a.volume_change).toFixed(2),o=parseFloat(a.avg_change_percent).toFixed(2);this.globalStatCard.innerHTML=`\n <div class="stat-row">\n <span class="stat-title">Total Coins:</span>\n <span class="stat-value">${this.applyCommas(t)}</span>\n </div>\n <div class="stat-row">\n <span class="stat-title">Active Markets:</span>\n <span class="stat-value">${this.applyCommas(e)}</span>\n </div>\n <div class="stat-row">\n <span class="stat-title">Market Cap:</span>\n <span class="stat-value">${this.applyCommas(s)}</span>\n </div>\n <div class="stat-row">\n <span class="stat-title">Market Cap Change:</span>\n <span class="stat-value">${parseFloat(r)<0?r:"+"+r}%</span>\n </div>\n <div class="stat-row">\n <span class="stat-title">Volume:</span>\n <span class="stat-value">${this.applyCommas(n)}</span>\n </div>\n <div class="stat-row">\n <span class="stat-title">Volume Change:</span>\n <span class="stat-value">${parseFloat(i)<0?i:"+"+i}%</span>\n </div>\n <div class="stat-row">\n <span class="stat-title">Avg Change:</span>\n <span class="stat-value">${parseFloat(o)<0?o:"+"+o}%</span>\n </div>\n `}applyCommas(a){if(parseFloat(a)<1)return parseFloat(a).toFixed(2);a=a.split("").reverse();for(let t=2;t<a.length;t+=3)0!==t&&t!==a.length-1&&"."!==a[t]&&(a[t]=", "+a[t]);return a.reverse().join("")}getTickerList(){return this.coinTickerListArray}}const coinTickerWrapper=document.querySelector("[data-coin-ticker-wrapper]"),globalStatCard=document.querySelector("[data-global-stat-card]");let crypto_api_obj=new CryptoAPI(coinTickerWrapper,globalStatCard);crypto_api_obj.requestListOfCoinTickers(),crypto_api_obj.requestGlobalStatAPI(),window.onload=()=>{document.querySelector("[data-loading]").style.display="none"};const callAPI=a=>{document.querySelector("[data-detail-layer]").style.transform="translate(0)";let t=crypto_api_obj.getTickerList().filter((t=>t.id===a.id));if(t=t[0],t){let a=t.rank.toString(),e=t.symbol.toString(),s=t.name.toString(),r=crypto_api_obj.applyCommas(t.price_usd.toString()),n=crypto_api_obj.applyCommas(t.market_cap_usd.toString()),i=t.percent_change_1h.toString(),o=t.percent_change_24h.toString(),l=t.percent_change_7d.toString();document.querySelector("[data-detail-card-wrapper]").innerHTML=`\n <header class="detail-card-header">\n <span class="ticker">${e}</span>\n <span class="name">${s}</span>\n </header>\n <div class="detail-row">\n <span class="row-title">Rank:</span>\n <span class="row-value">#${a}</span>\n </div>\n <div class="detail-row">\n <span class="row-title">Price:</span>\n <span class="row-value">$${r}</span>\n </div>\n <div class="detail-row">\n <span class="row-title">Market Cap:</span>\n <span class="row-value">${n}</span>\n </div>\n <div class="detail-row">\n <span class="row-title">1hr Change:</span>\n <span class="row-value">${parseFloat(i)<0?i:"+"+i}%</span>\n </div>\n <div class="detail-row">\n <span class="row-title">24hr Change:</span>\n <span class="row-value">${parseFloat(o)<0?o:"+"+o}%</span>\n </div>\n <div class="detail-row">\n <span class="row-title">7d Change:</span>\n <span class="row-value">${parseFloat(l)<0?l:"+"+l}%</span>\n </div>\n `}},closeDetailLayerBtn=document.querySelector("[data-close-detail-layer]");closeDetailLayerBtn.addEventListener("click",(()=>{document.querySelector("[data-detail-layer]").style.transform="translate(100%)"}));const tickerTitles=document.querySelectorAll("[data-ticker-title]"),removeOtherCarets=a=>{let t=[];for(let e=0;e<tickerTitles.length;e++){let s=tickerTitles[e].id.split("-")[1];a.toString()!==s.toString()&&t.push(tickerTitles[e])}for(let a=0;a<t.length;a++)t[a].innerHTML=t[a].innerText.toString().trim()},sortDown=(a="rank")=>{let t;switch(a){case"rank":t=crypto_api_obj.getTickerList(),t=t.sort(((a,e)=>(console.log(t),parseInt(a.rank)>parseInt(e.rank)?-1:parseInt(a.rank)<parseInt(e.rank)?1:0))),crypto_api_obj.displayCoinTickerListArray(t,!0);break;case"ticker":t=crypto_api_obj.getTickerList(),t=t.sort(((a,t)=>a.symbol.toLowerCase()>t.symbol.toLowerCase()?-1:a.symbol.toLowerCase()<t.symbol.toLowerCase()?1:0)),crypto_api_obj.displayCoinTickerListArray(t,!0);break;case"name":t=crypto_api_obj.getTickerList(),t=t.sort(((a,t)=>a.name.toLowerCase()>t.name.toLowerCase()?-1:a.symbol.toLowerCase()<t.symbol.toLowerCase()?1:0)),crypto_api_obj.displayCoinTickerListArray(t,!0);break;case"price":t=crypto_api_obj.getTickerList(),t=t.sort(((a,t)=>parseFloat(a.price_usd)>parseFloat(t.price_usd)?-1:parseFloat(a.price_usd)<parseFloat(t.price_usd)?1:0)),crypto_api_obj.displayCoinTickerListArray(t,!0);break;default:return}},sortUp=(a="rank")=>{let t;switch(a){case"rank":t=crypto_api_obj.getTickerList(),t=t.sort(((a,t)=>parseInt(a.rank)<parseInt(t.rank)?-1:parseInt(a.rank)>parseInt(t.rank)?1:0)),crypto_api_obj.displayCoinTickerListArray(t,!0);break;case"ticker":t=crypto_api_obj.getTickerList(),t=t.sort(((a,t)=>a.symbol.toLowerCase()<t.symbol.toLowerCase()?-1:a.symbol.toLowerCase()>t.symbol.toLowerCase()?1:0)),crypto_api_obj.displayCoinTickerListArray(t,!0);break;case"name":t=crypto_api_obj.getTickerList(),t=t.sort(((a,t)=>a.name.toLowerCase()<t.name.toLowerCase()?-1:a.symbol.toLowerCase()>t.symbol.toLowerCase()?1:0)),crypto_api_obj.displayCoinTickerListArray(t,!0);break;case"price":t=crypto_api_obj.getTickerList(),t=t.sort(((a,t)=>parseFloat(a.price_usd)<parseFloat(t.price_usd)?-1:parseFloat(a.price_usd)>parseFloat(t.price_usd)?1:0)),crypto_api_obj.displayCoinTickerListArray(t,!0)}};tickerTitles.forEach(((a,t)=>{a.addEventListener("click",(e=>{let s=a.innerText;a.id=="up-"+t?(a.innerHTML=`\n ${s}\n <ion-icon name="caret-down"></ion-icon>\n `,a.id="down-"+t,removeOtherCarets(t),sortUp(s.toLowerCase().trim())):a.id=="down-"+t&&(a.innerHTML=`\n ${s}\n <ion-icon name="caret-up"></ion-icon>\n `,a.id="up-"+t,removeOtherCarets(t),sortDown(s.toLowerCase().trim()))}))}));